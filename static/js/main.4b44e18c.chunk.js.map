{"version":3,"sources":["components/Button/index.jsx","components/TaskBar/index.jsx","components/DesktopGrid/index.jsx","components/IconButton/index.jsx","components/Window/index.jsx","components/DesktopIcon/index.jsx","App.js","reportWebVitals.js","index.js","data/sections.js"],"names":["Button","text","bold","icon","classes","classNames","type","className","src","process","alt","TaskBar","windows","map","idx","name","active","DesktopGrid","icons","IconButton","onClick","role","defaultProps","Window","title","content","onClose","handle","bounds","dangerouslySetInnerHTML","__html","DesktopIcon","App","useState","setWindows","setIcons","useEffect","newIcons","sections","id","find","w","newWindows","openWindow","initSections","length","window","section","s","filter","closeWindow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4b44e18c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst publicUrl = process.env.PUBLIC_URL;\r\n\r\nconst Button = ({ text, bold, icon }) => {\r\n  const classes = classNames('button', [{ 'button--bold': bold }]);\r\n\r\n  return (\r\n    <button type=\"button\" className={classes}>\r\n      { icon && <img className=\"button--icon\" src={`${publicUrl}/icons/${icon}.png`} alt={icon} /> }\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '../Button';\n\nconst TaskBar = ({ windows }) => {\n  return (\n    <div className=\"task-bar\">\n      <Button text=\"Inicio\" bold icon=\"windows-0\" />\n\n      {windows.map(({ name, active }, idx) => {\n        const classes = classNames('task-bar--window', [{ 'task-bar--window-active': active }]);\n\n        return (\n          <span key={idx} className={classes}>{name}</span>\n        )\n      })}\n    </div>\n  );\n};\n\nTaskBar.propTypes = {\n  windows: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    active: PropTypes.bool,\n  })).isRequired,\n}\n\nexport default TaskBar;\n","import PropTypes from 'prop-types';\r\n\r\nconst DesktopGrid = ({ icons }) => <div className=\"desktop-grid\">{icons}</div>;\r\n\r\nDesktopGrid.propTypes = {\r\n  icons: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n};\r\n\r\nexport default DesktopGrid;\r\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\nconst IconButton = ({ icon, onClick }) => {\n  const classes = classNames('icon-button--image', `icon-button--${icon}`);\n\n  return (\n    <div role=\"button\" className=\"icon-button\" onClick={onClick}>\n      <img className={classes} src={`${publicUrl}/icons/${icon}.png`} alt={icon} />\n    </div>\n  );\n};\n\nIconButton.propTypes = {\n  icon: PropTypes.oneOf([\n    'minimize',\n    'maximize',\n    'close',\n  ]),\n  onClick: PropTypes.func,\n};\n\nIconButton.defaultProps = {\n  onClick: () => {},\n};\n\nexport default IconButton;\n","import PropTypes from 'prop-types';\nimport Draggable from 'react-draggable';\nimport IconButton from '../IconButton';\n\nconst Window = ({ title, content, onClose }) => {\n  return (\n    <Draggable handle=\".window--title\" bounds=\"body\">\n      <div className=\"window\">\n        <div className=\"window--title\">\n          <div className=\"window--text\">{title}</div>\n\n          <div className=\"window--icons\">\n            <IconButton icon=\"minimize\" />\n            <IconButton icon=\"maximize\" />\n            <IconButton icon=\"close\" onClick={onClose} />\n          </div>\n        </div>\n\n        <div className=\"window--content\" dangerouslySetInnerHTML={{ __html: content }}></div>\n      </div>\n    </Draggable>\n  );\n};\n\nWindow.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Window;\n","import PropTypes from 'prop-types';\r\n\r\nconst publicUrl = process.env.PUBLIC_URL;\r\n\r\nconst DesktopIcon = ({ text, icon, onClick }) => {\r\n  return (\r\n    <div className=\"desktop-icon\" onClick={onClick}>\r\n      <img className=\"desktop-icon--icon\" src={`${publicUrl}/icons/${icon}.png`} alt={icon} />\r\n      <div className=\"desktop-icon--text\">{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDesktopIcon.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DesktopIcon;\r\n","import { useState, useEffect } from 'react';\nimport TaskBar from './components/TaskBar';\nimport DesktopGrid from './components/DesktopGrid';\nimport Window from './components/Window';\nimport DesktopIcon from './components/DesktopIcon';\nimport sections from './data/sections';\n\nconst App = () => {\n  const [windows, setWindows] = useState([]);\n  const [icons, setIcons] = useState([]);\n\n  const closeWindow = (id) => {\n    if (windows.find((w) => w.id === id)) {\n      const newWindows = windows.filter((w) => w.id !== id);\n      setWindows(newWindows);\n    }\n  };\n\n  useEffect(() => {\n    const openWindow = (id, name) => {\n      if (!windows.find((w) => w.id === id)) {\n        const newWindows = [...windows, { id, name, active: true }];\n        setWindows(newWindows);\n      }\n    }\n\n    const initSections = () => {\n      const newIcons = sections.map(({ id, name, icon }) => {\n        return (\n          <DesktopIcon\n            key={id}\n            text={name}\n            icon={icon}\n            onClick={() => openWindow(id, name)}\n          />\n        );\n      });\n\n      setIcons(newIcons);\n    };\n\n    initSections();\n  }, [windows]);\n\n  useEffect(() => {\n    setWindows([{ id: 1, name: 'Informaci√≥n', active: true }]);\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <DesktopGrid icons={icons} />\n\n      {\n        !!windows.length && windows.map((window) => {\n          const section = sections.find((s) => s.id === window.id);\n\n          return (\n            <Window\n              key={section.id}\n              title={section.name}\n              content={section.content}\n              onClose={() => closeWindow(section.id) }\n            />\n          );\n        })\n      }\n\n      <TaskBar windows={windows} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'normalize.css';\nimport './scss/styles.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = [\n  {\n    id: 1,\n    name: 'Informaci√≥n',\n    content: `Importante:\\n\\nBienvenido al emocionante nuevo mundo de Ventana 98, donde tu ordenador de escritorio se encuentra con la InTeRnEt!! Si√©ntate y rel√°jate mientras tomas un breve recorrido a trav√©s de las opciones que te ofrece esta pantalla. Si quieres explorar alguna opci√≥n, solo haz clic en ella.\\n\\nDesarrollador:\\n\\n¬†¬†¬†¬†Enrique Berm√∫dez\\n¬†¬†¬†¬†25 A√±os\\n¬†¬†¬†¬†Ingeniero en Computaci√≥n\\n¬†¬†¬†¬†Santa Fe, Argentina`,\n    icon: 'user_card',\n  },\n  {\n    id: 2,\n    name: 'Contacto',\n    content: 'Correo electr√≥nico: enbermudez96@gmail.com\\n\\nTel√©fono: +54 342 629-5266\\n\\nGithub: <a href=\"https://github.com/enbermudez\" target=\"_blank\" rel=\"noreferrer\">https://github.com/enbermudez</a>\\n\\nLinkedIn: <a href=\"https://linkedin.com/in/enbermudez\" target=\"_blank\" rel=\"noreferrer\">linkedin.com/in/enbermudez</a>',\n    icon: 'msn',\n  },\n  {\n    id: 3,\n    name: 'Experiencia',\n    content: 'Actualidad:\\n\\nKenility / Taller Technologies / Paypal\\n- Desarrollador web full stack\\n\\nAnteriormente:\\n\\nMercadoLibre\\n- Desarrollador web frontend\\n\\n4R Soluciones\\n- Desarrollador web full stack\\n\\nInnova4J\\n- Desarrollador web full stack\\n\\nPro-Acce c.a.\\n- Desarrollador web full stack',\n    icon: 'script',\n  },\n  {\n    id: 4,\n    name: 'Tecnolog√≠as',\n    content: 'Competente:\\n\\n¬†¬†¬†¬†- Javascript, Node, React, Sass, Git, Express, RESTful y Python.\\n\\nConocedor:\\n\\n¬†¬†¬†¬†- MySQL, MongoDB, CI/CD y Pruebas unitarias.\\n\\nFamiliarizado:\\n\\n¬†¬†¬†¬†- Typescript, Bash, VueJS, Docker y PostgreSQL.',\n    icon: 'console',\n  },\n  {\n    id: 5,\n    name: 'FAQ',\n    content: '¬øPor qu√© Windows 98?\\n\\n¬†¬†¬†¬†- ¬øPor qu√© no?\\n\\n¬øPor qu√© no puedo minimizar/maximizar?\\n\\n¬†¬†¬†¬†- Alg√∫n d√≠a agregar√© esa funcionalidad.\\n\\n¬øQu√© utilizaste para crear esto?\\n\\n¬†¬†¬†¬†- Javascript, Node, React, Scss y mucha paciencia.\\n\\n¬øPuedes hackear un facebook por mi?\\n\\n¬†¬†¬†¬†- Fuera de aqu√≠.',\n    icon: 'help',\n  },\n];\n"],"sourceRoot":""}